// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: device.proto

#include "device.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace device_service {

inline constexpr DeviceTableRow::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : row_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceTableRow::DeviceTableRow(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceTableRowDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceTableRowDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceTableRowDefaultTypeInternal() {}
  union {
    DeviceTableRow _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceTableRowDefaultTypeInternal _DeviceTableRow_default_instance_;

inline constexpr DeviceTableBySlaveIdRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        point_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        slave_id_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceTableBySlaveIdRequest::DeviceTableBySlaveIdRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceTableBySlaveIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceTableBySlaveIdRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceTableBySlaveIdRequestDefaultTypeInternal() {}
  union {
    DeviceTableBySlaveIdRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceTableBySlaveIdRequestDefaultTypeInternal _DeviceTableBySlaveIdRequest_default_instance_;

inline constexpr DeviceSlaveCntResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : slave_cnt_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSlaveCntResponse::DeviceSlaveCntResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSlaveCntResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSlaveCntResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSlaveCntResponseDefaultTypeInternal() {}
  union {
    DeviceSlaveCntResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSlaveCntResponseDefaultTypeInternal _DeviceSlaveCntResponse_default_instance_;

inline constexpr DeviceSlaveCntRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceSlaveCntRequest::DeviceSlaveCntRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceSlaveCntRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceSlaveCntRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceSlaveCntRequestDefaultTypeInternal() {}
  union {
    DeviceSlaveCntRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceSlaveCntRequestDefaultTypeInternal _DeviceSlaveCntRequest_default_instance_;

inline constexpr DeviceNameListResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_names_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceNameListResponse::DeviceNameListResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceNameListResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceNameListResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceNameListResponseDefaultTypeInternal() {}
  union {
    DeviceNameListResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceNameListResponseDefaultTypeInternal _DeviceNameListResponse_default_instance_;

inline constexpr DeviceNameListRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceNameListRequest::DeviceNameListRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceNameListRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceNameListRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceNameListRequestDefaultTypeInternal() {}
  union {
    DeviceNameListRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceNameListRequestDefaultTypeInternal _DeviceNameListRequest_default_instance_;

inline constexpr DeviceInfoRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : device_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceInfoRequest::DeviceInfoRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInfoRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInfoRequestDefaultTypeInternal() {}
  union {
    DeviceInfoRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInfoRequestDefaultTypeInternal _DeviceInfoRequest_default_instance_;

inline constexpr DeviceInfoDetail::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : ip_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        server_status_{false},
        simulate_status_{false},
        plan_status_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceInfoDetail::DeviceInfoDetail(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceInfoDetailDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInfoDetailDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInfoDetailDefaultTypeInternal() {}
  union {
    DeviceInfoDetail _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInfoDetailDefaultTypeInternal _DeviceInfoDetail_default_instance_;

inline constexpr DeviceTableBySlaveIdResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        table_data_{},
        head_data_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceTableBySlaveIdResponse::DeviceTableBySlaveIdResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceTableBySlaveIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceTableBySlaveIdResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceTableBySlaveIdResponseDefaultTypeInternal() {}
  union {
    DeviceTableBySlaveIdResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceTableBySlaveIdResponseDefaultTypeInternal _DeviceTableBySlaveIdResponse_default_instance_;

inline constexpr DeviceInfoResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        info_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR DeviceInfoResponse::DeviceInfoResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DeviceInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeviceInfoResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeviceInfoResponseDefaultTypeInternal() {}
  union {
    DeviceInfoResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeviceInfoResponseDefaultTypeInternal _DeviceInfoResponse_default_instance_;
}  // namespace device_service
static ::_pb::Metadata file_level_metadata_device_2eproto[10];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_device_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_device_2eproto = nullptr;
const ::uint32_t TableStruct_device_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceNameListRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceNameListRequest, _impl_.device_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceNameListResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceNameListResponse, _impl_.device_names_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoDetail, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoDetail, _impl_.ip_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoDetail, _impl_.port_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoDetail, _impl_.type_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoDetail, _impl_.server_status_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoDetail, _impl_.simulate_status_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoDetail, _impl_.plan_status_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoRequest, _impl_.device_name_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceInfoResponse, _impl_.info_),
    0,
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceSlaveCntRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceSlaveCntRequest, _impl_.device_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceSlaveCntResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceSlaveCntResponse, _impl_.slave_cnt_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdRequest, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdRequest, _impl_.device_name_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdRequest, _impl_.slave_id_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdRequest, _impl_.point_name_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableRow, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableRow, _impl_.row_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdResponse, _impl_._has_bits_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdResponse, _impl_.head_data_),
    PROTOBUF_FIELD_OFFSET(::device_service::DeviceTableBySlaveIdResponse, _impl_.table_data_),
    0,
    ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::device_service::DeviceNameListRequest)},
        {9, -1, -1, sizeof(::device_service::DeviceNameListResponse)},
        {18, -1, -1, sizeof(::device_service::DeviceInfoDetail)},
        {32, -1, -1, sizeof(::device_service::DeviceInfoRequest)},
        {41, 50, -1, sizeof(::device_service::DeviceInfoResponse)},
        {51, -1, -1, sizeof(::device_service::DeviceSlaveCntRequest)},
        {60, -1, -1, sizeof(::device_service::DeviceSlaveCntResponse)},
        {69, -1, -1, sizeof(::device_service::DeviceTableBySlaveIdRequest)},
        {80, -1, -1, sizeof(::device_service::DeviceTableRow)},
        {89, 99, -1, sizeof(::device_service::DeviceTableBySlaveIdResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::device_service::_DeviceNameListRequest_default_instance_._instance,
    &::device_service::_DeviceNameListResponse_default_instance_._instance,
    &::device_service::_DeviceInfoDetail_default_instance_._instance,
    &::device_service::_DeviceInfoRequest_default_instance_._instance,
    &::device_service::_DeviceInfoResponse_default_instance_._instance,
    &::device_service::_DeviceSlaveCntRequest_default_instance_._instance,
    &::device_service::_DeviceSlaveCntResponse_default_instance_._instance,
    &::device_service::_DeviceTableBySlaveIdRequest_default_instance_._instance,
    &::device_service::_DeviceTableRow_default_instance_._instance,
    &::device_service::_DeviceTableBySlaveIdResponse_default_instance_._instance,
};
const char descriptor_table_protodef_device_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\014device.proto\022\016device_service\",\n\025Device"
    "NameListRequest\022\023\n\013device_name\030\001 \001(\t\".\n\026"
    "DeviceNameListResponse\022\024\n\014device_names\030\001"
    " \003(\t\"\177\n\020DeviceInfoDetail\022\n\n\002ip\030\001 \001(\t\022\014\n\004"
    "port\030\002 \001(\005\022\014\n\004type\030\003 \001(\t\022\025\n\rserver_statu"
    "s\030\004 \001(\010\022\027\n\017simulate_status\030\005 \001(\010\022\023\n\013plan"
    "_status\030\006 \001(\010\"(\n\021DeviceInfoRequest\022\023\n\013de"
    "vice_name\030\001 \001(\t\"D\n\022DeviceInfoResponse\022.\n"
    "\004info\030\001 \001(\0132 .device_service.DeviceInfoD"
    "etail\",\n\025DeviceSlaveCntRequest\022\023\n\013device"
    "_name\030\001 \001(\t\"+\n\026DeviceSlaveCntResponse\022\021\n"
    "\tslave_cnt\030\001 \001(\005\"X\n\033DeviceTableBySlaveId"
    "Request\022\023\n\013device_name\030\001 \001(\t\022\020\n\010slave_id"
    "\030\002 \001(\005\022\022\n\npoint_name\030\003 \001(\t\"\035\n\016DeviceTabl"
    "eRow\022\013\n\003row\030\001 \003(\t\"\205\001\n\034DeviceTableBySlave"
    "IdResponse\0221\n\thead_data\030\001 \001(\0132\036.device_s"
    "ervice.DeviceTableRow\0222\n\ntable_data\030\002 \003("
    "\0132\036.device_service.DeviceTableRow2\257\003\n\rDe"
    "viceService\022f\n\023GetDeviceStringList\022%.dev"
    "ice_service.DeviceNameListRequest\032&.devi"
    "ce_service.DeviceNameListResponse\"\000\022d\n\021G"
    "etDeviceSlaveCnt\022%.device_service.Device"
    "SlaveCntRequest\032&.device_service.DeviceS"
    "laveCntResponse\"\000\022X\n\rGetDeviceInfo\022!.dev"
    "ice_service.DeviceInfoRequest\032\".device_s"
    "ervice.DeviceInfoResponse\"\000\022v\n\027GetDevice"
    "TableBySlaveId\022+.device_service.DeviceTa"
    "bleBySlaveIdRequest\032,.device_service.Dev"
    "iceTableBySlaveIdResponse\"\000b\006proto3"
};
static ::absl::once_flag descriptor_table_device_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_device_2eproto = {
    false,
    false,
    1155,
    descriptor_table_protodef_device_2eproto,
    "device.proto",
    &descriptor_table_device_2eproto_once,
    nullptr,
    0,
    10,
    schemas,
    file_default_instances,
    TableStruct_device_2eproto::offsets,
    file_level_metadata_device_2eproto,
    file_level_enum_descriptors_device_2eproto,
    file_level_service_descriptors_device_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_device_2eproto_getter() {
  return &descriptor_table_device_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_device_2eproto(&descriptor_table_device_2eproto);
namespace device_service {
// ===================================================================

class DeviceNameListRequest::_Internal {
 public:
};

DeviceNameListRequest::DeviceNameListRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceNameListRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNameListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_name_(arena, from.device_name_),
        _cached_size_{0} {}

DeviceNameListRequest::DeviceNameListRequest(
    ::google::protobuf::Arena* arena,
    const DeviceNameListRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceNameListRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceNameListRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNameListRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_(arena),
        _cached_size_{0} {}

inline void DeviceNameListRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceNameListRequest::~DeviceNameListRequest() {
  // @@protoc_insertion_point(destructor:device_service.DeviceNameListRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceNameListRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceNameListRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceNameListRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceNameListRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> DeviceNameListRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceNameListRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string device_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNameListRequest, _impl_.device_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceNameListRequest, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\13\0\0\0\0\0\0"
    "device_service.DeviceNameListRequest"
    "device_name"
  }},
};

::uint8_t* DeviceNameListRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceNameListRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    const std::string& _s = this->_internal_device_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceNameListRequest.device_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceNameListRequest)
  return target;
}

::size_t DeviceNameListRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceNameListRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceNameListRequest::_class_data_ = {
    DeviceNameListRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceNameListRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceNameListRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceNameListRequest*>(&to_msg);
  auto& from = static_cast<const DeviceNameListRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceNameListRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceNameListRequest::CopyFrom(const DeviceNameListRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceNameListRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceNameListRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceNameListRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceNameListRequest::InternalSwap(DeviceNameListRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
}

::google::protobuf::Metadata DeviceNameListRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[0]);
}
// ===================================================================

class DeviceNameListResponse::_Internal {
 public:
};

DeviceNameListResponse::DeviceNameListResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceNameListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNameListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_names_{visibility, arena, from.device_names_},
        _cached_size_{0} {}

DeviceNameListResponse::DeviceNameListResponse(
    ::google::protobuf::Arena* arena,
    const DeviceNameListResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceNameListResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceNameListResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceNameListResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_names_{visibility, arena},
        _cached_size_{0} {}

inline void DeviceNameListResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceNameListResponse::~DeviceNameListResponse() {
  // @@protoc_insertion_point(destructor:device_service.DeviceNameListResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceNameListResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceNameListResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceNameListResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_names_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceNameListResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2> DeviceNameListResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceNameListResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string device_names = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceNameListResponse, _impl_.device_names_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string device_names = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceNameListResponse, _impl_.device_names_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\45\14\0\0\0\0\0\0"
    "device_service.DeviceNameListResponse"
    "device_names"
  }},
};

::uint8_t* DeviceNameListResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceNameListResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string device_names = 1;
  for (int i = 0, n = this->_internal_device_names_size(); i < n; ++i) {
    const auto& s = this->_internal_device_names().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceNameListResponse.device_names");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceNameListResponse)
  return target;
}

::size_t DeviceNameListResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceNameListResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string device_names = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_device_names().size());
  for (int i = 0, n = _internal_device_names().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_device_names().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceNameListResponse::_class_data_ = {
    DeviceNameListResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceNameListResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceNameListResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceNameListResponse*>(&to_msg);
  auto& from = static_cast<const DeviceNameListResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceNameListResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_device_names()->MergeFrom(from._internal_device_names());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceNameListResponse::CopyFrom(const DeviceNameListResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceNameListResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceNameListResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceNameListResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceNameListResponse::InternalSwap(DeviceNameListResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.device_names_.InternalSwap(&other->_impl_.device_names_);
}

::google::protobuf::Metadata DeviceNameListResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[1]);
}
// ===================================================================

class DeviceInfoDetail::_Internal {
 public:
};

DeviceInfoDetail::DeviceInfoDetail(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceInfoDetail)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfoDetail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : ip_(arena, from.ip_),
        type_(arena, from.type_),
        _cached_size_{0} {}

DeviceInfoDetail::DeviceInfoDetail(
    ::google::protobuf::Arena* arena,
    const DeviceInfoDetail& from)
    : ::google::protobuf::Message(arena) {
  DeviceInfoDetail* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, plan_status_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::plan_status_));

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceInfoDetail)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfoDetail::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : ip_(arena),
        type_(arena),
        _cached_size_{0} {}

inline void DeviceInfoDetail::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, plan_status_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::plan_status_));
}
DeviceInfoDetail::~DeviceInfoDetail() {
  // @@protoc_insertion_point(destructor:device_service.DeviceInfoDetail)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceInfoDetail::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.ip_.Destroy();
  _impl_.type_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceInfoDetail::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceInfoDetail)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  _impl_.type_.ClearToEmpty();
  ::memset(&_impl_.port_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.plan_status_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.plan_status_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceInfoDetail::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 46, 2> DeviceInfoDetail::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceInfoDetail_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string ip = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.ip_)}},
    // int32 port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceInfoDetail, _impl_.port_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.port_)}},
    // string type = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.type_)}},
    // bool server_status = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceInfoDetail, _impl_.server_status_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.server_status_)}},
    // bool simulate_status = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceInfoDetail, _impl_.simulate_status_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.simulate_status_)}},
    // bool plan_status = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(DeviceInfoDetail, _impl_.plan_status_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.plan_status_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string ip = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.ip_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.port_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string type = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool server_status = 4;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.server_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool simulate_status = 5;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.simulate_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
    // bool plan_status = 6;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.plan_status_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\37\2\0\4\0\0\0\0"
    "device_service.DeviceInfoDetail"
    "ip"
    "type"
  }},
};

::uint8_t* DeviceInfoDetail::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceInfoDetail)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    const std::string& _s = this->_internal_ip();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceInfoDetail.ip");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 port = 2;
  if (this->_internal_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_port(), target);
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    const std::string& _s = this->_internal_type();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceInfoDetail.type");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // bool server_status = 4;
  if (this->_internal_server_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        4, this->_internal_server_status(), target);
  }

  // bool simulate_status = 5;
  if (this->_internal_simulate_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        5, this->_internal_simulate_status(), target);
  }

  // bool plan_status = 6;
  if (this->_internal_plan_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        6, this->_internal_plan_status(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceInfoDetail)
  return target;
}

::size_t DeviceInfoDetail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceInfoDetail)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip());
  }

  // string type = 3;
  if (!this->_internal_type().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_type());
  }

  // int32 port = 2;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_port());
  }

  // bool server_status = 4;
  if (this->_internal_server_status() != 0) {
    total_size += 2;
  }

  // bool simulate_status = 5;
  if (this->_internal_simulate_status() != 0) {
    total_size += 2;
  }

  // bool plan_status = 6;
  if (this->_internal_plan_status() != 0) {
    total_size += 2;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceInfoDetail::_class_data_ = {
    DeviceInfoDetail::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceInfoDetail::GetClassData() const {
  return &_class_data_;
}

void DeviceInfoDetail::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceInfoDetail*>(&to_msg);
  auto& from = static_cast<const DeviceInfoDetail&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceInfoDetail)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (!from._internal_type().empty()) {
    _this->_internal_set_type(from._internal_type());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_server_status() != 0) {
    _this->_internal_set_server_status(from._internal_server_status());
  }
  if (from._internal_simulate_status() != 0) {
    _this->_internal_set_simulate_status(from._internal_simulate_status());
  }
  if (from._internal_plan_status() != 0) {
    _this->_internal_set_plan_status(from._internal_plan_status());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceInfoDetail::CopyFrom(const DeviceInfoDetail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceInfoDetail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceInfoDetail::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceInfoDetail::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceInfoDetail::InternalSwap(DeviceInfoDetail* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_, &other->_impl_.ip_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.type_, &other->_impl_.type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.plan_status_)
      + sizeof(DeviceInfoDetail::_impl_.plan_status_)
      - PROTOBUF_FIELD_OFFSET(DeviceInfoDetail, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata DeviceInfoDetail::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[2]);
}
// ===================================================================

class DeviceInfoRequest::_Internal {
 public:
};

DeviceInfoRequest::DeviceInfoRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_name_(arena, from.device_name_),
        _cached_size_{0} {}

DeviceInfoRequest::DeviceInfoRequest(
    ::google::protobuf::Arena* arena,
    const DeviceInfoRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceInfoRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceInfoRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfoRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_(arena),
        _cached_size_{0} {}

inline void DeviceInfoRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceInfoRequest::~DeviceInfoRequest() {
  // @@protoc_insertion_point(destructor:device_service.DeviceInfoRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceInfoRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceInfoRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceInfoRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2> DeviceInfoRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceInfoRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string device_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoRequest, _impl_.device_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoRequest, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\40\13\0\0\0\0\0\0"
    "device_service.DeviceInfoRequest"
    "device_name"
  }},
};

::uint8_t* DeviceInfoRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceInfoRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    const std::string& _s = this->_internal_device_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceInfoRequest.device_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceInfoRequest)
  return target;
}

::size_t DeviceInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceInfoRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceInfoRequest::_class_data_ = {
    DeviceInfoRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceInfoRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceInfoRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceInfoRequest*>(&to_msg);
  auto& from = static_cast<const DeviceInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceInfoRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceInfoRequest::CopyFrom(const DeviceInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceInfoRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceInfoRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceInfoRequest::InternalSwap(DeviceInfoRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
}

::google::protobuf::Metadata DeviceInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[3]);
}
// ===================================================================

class DeviceInfoResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceInfoResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceInfoResponse, _impl_._has_bits_);
  static const ::device_service::DeviceInfoDetail& info(const DeviceInfoResponse* msg);
  static void set_has_info(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::device_service::DeviceInfoDetail& DeviceInfoResponse::_Internal::info(const DeviceInfoResponse* msg) {
  return *msg->_impl_.info_;
}
DeviceInfoResponse::DeviceInfoResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

DeviceInfoResponse::DeviceInfoResponse(
    ::google::protobuf::Arena* arena,
    const DeviceInfoResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceInfoResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.info_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::device_service::DeviceInfoDetail>(arena, *from._impl_.info_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceInfoResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceInfoResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceInfoResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.info_ = {};
}
DeviceInfoResponse::~DeviceInfoResponse() {
  // @@protoc_insertion_point(destructor:device_service.DeviceInfoResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceInfoResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.info_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceInfoResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.info_ != nullptr);
    _impl_.info_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceInfoResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DeviceInfoResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceInfoResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceInfoResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // .device_service.DeviceInfoDetail info = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceInfoResponse, _impl_.info_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .device_service.DeviceInfoDetail info = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceInfoResponse, _impl_.info_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::device_service::DeviceInfoDetail>()},
  }}, {{
  }},
};

::uint8_t* DeviceInfoResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceInfoResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .device_service.DeviceInfoDetail info = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::info(this),
        _Internal::info(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceInfoResponse)
  return target;
}

::size_t DeviceInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceInfoResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .device_service.DeviceInfoDetail info = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.info_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceInfoResponse::_class_data_ = {
    DeviceInfoResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceInfoResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceInfoResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceInfoResponse*>(&to_msg);
  auto& from = static_cast<const DeviceInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceInfoResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_info()->::device_service::DeviceInfoDetail::MergeFrom(
        from._internal_info());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceInfoResponse::CopyFrom(const DeviceInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceInfoResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceInfoResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceInfoResponse::InternalSwap(DeviceInfoResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.info_, other->_impl_.info_);
}

::google::protobuf::Metadata DeviceInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[4]);
}
// ===================================================================

class DeviceSlaveCntRequest::_Internal {
 public:
};

DeviceSlaveCntRequest::DeviceSlaveCntRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceSlaveCntRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSlaveCntRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_name_(arena, from.device_name_),
        _cached_size_{0} {}

DeviceSlaveCntRequest::DeviceSlaveCntRequest(
    ::google::protobuf::Arena* arena,
    const DeviceSlaveCntRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceSlaveCntRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceSlaveCntRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceSlaveCntRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_(arena),
        _cached_size_{0} {}

inline void DeviceSlaveCntRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceSlaveCntRequest::~DeviceSlaveCntRequest() {
  // @@protoc_insertion_point(destructor:device_service.DeviceSlaveCntRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSlaveCntRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSlaveCntRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceSlaveCntRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSlaveCntRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 56, 2> DeviceSlaveCntRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSlaveCntRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string device_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSlaveCntRequest, _impl_.device_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSlaveCntRequest, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\13\0\0\0\0\0\0"
    "device_service.DeviceSlaveCntRequest"
    "device_name"
  }},
};

::uint8_t* DeviceSlaveCntRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceSlaveCntRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    const std::string& _s = this->_internal_device_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceSlaveCntRequest.device_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceSlaveCntRequest)
  return target;
}

::size_t DeviceSlaveCntRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceSlaveCntRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device_name());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSlaveCntRequest::_class_data_ = {
    DeviceSlaveCntRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSlaveCntRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceSlaveCntRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSlaveCntRequest*>(&to_msg);
  auto& from = static_cast<const DeviceSlaveCntRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceSlaveCntRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSlaveCntRequest::CopyFrom(const DeviceSlaveCntRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceSlaveCntRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSlaveCntRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSlaveCntRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSlaveCntRequest::InternalSwap(DeviceSlaveCntRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
}

::google::protobuf::Metadata DeviceSlaveCntRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[5]);
}
// ===================================================================

class DeviceSlaveCntResponse::_Internal {
 public:
};

DeviceSlaveCntResponse::DeviceSlaveCntResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceSlaveCntResponse)
}
DeviceSlaveCntResponse::DeviceSlaveCntResponse(
    ::google::protobuf::Arena* arena, const DeviceSlaveCntResponse& from)
    : DeviceSlaveCntResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE DeviceSlaveCntResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void DeviceSlaveCntResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slave_cnt_ = {};
}
DeviceSlaveCntResponse::~DeviceSlaveCntResponse() {
  // @@protoc_insertion_point(destructor:device_service.DeviceSlaveCntResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceSlaveCntResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceSlaveCntResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceSlaveCntResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.slave_cnt_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceSlaveCntResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> DeviceSlaveCntResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceSlaveCntResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int32 slave_cnt = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceSlaveCntResponse, _impl_.slave_cnt_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceSlaveCntResponse, _impl_.slave_cnt_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 slave_cnt = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceSlaveCntResponse, _impl_.slave_cnt_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* DeviceSlaveCntResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceSlaveCntResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 slave_cnt = 1;
  if (this->_internal_slave_cnt() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<1>(
            stream, this->_internal_slave_cnt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceSlaveCntResponse)
  return target;
}

::size_t DeviceSlaveCntResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceSlaveCntResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 slave_cnt = 1;
  if (this->_internal_slave_cnt() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_slave_cnt());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceSlaveCntResponse::_class_data_ = {
    DeviceSlaveCntResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceSlaveCntResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceSlaveCntResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceSlaveCntResponse*>(&to_msg);
  auto& from = static_cast<const DeviceSlaveCntResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceSlaveCntResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_slave_cnt() != 0) {
    _this->_internal_set_slave_cnt(from._internal_slave_cnt());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceSlaveCntResponse::CopyFrom(const DeviceSlaveCntResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceSlaveCntResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceSlaveCntResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceSlaveCntResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceSlaveCntResponse::InternalSwap(DeviceSlaveCntResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.slave_cnt_, other->_impl_.slave_cnt_);
}

::google::protobuf::Metadata DeviceSlaveCntResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[6]);
}
// ===================================================================

class DeviceTableBySlaveIdRequest::_Internal {
 public:
};

DeviceTableBySlaveIdRequest::DeviceTableBySlaveIdRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceTableBySlaveIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceTableBySlaveIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : device_name_(arena, from.device_name_),
        point_name_(arena, from.point_name_),
        _cached_size_{0} {}

DeviceTableBySlaveIdRequest::DeviceTableBySlaveIdRequest(
    ::google::protobuf::Arena* arena,
    const DeviceTableBySlaveIdRequest& from)
    : ::google::protobuf::Message(arena) {
  DeviceTableBySlaveIdRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  _impl_.slave_id_ = from._impl_.slave_id_;

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceTableBySlaveIdRequest)
}
inline PROTOBUF_NDEBUG_INLINE DeviceTableBySlaveIdRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : device_name_(arena),
        point_name_(arena),
        _cached_size_{0} {}

inline void DeviceTableBySlaveIdRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.slave_id_ = {};
}
DeviceTableBySlaveIdRequest::~DeviceTableBySlaveIdRequest() {
  // @@protoc_insertion_point(destructor:device_service.DeviceTableBySlaveIdRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceTableBySlaveIdRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.device_name_.Destroy();
  _impl_.point_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceTableBySlaveIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceTableBySlaveIdRequest)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.device_name_.ClearToEmpty();
  _impl_.point_name_.ClearToEmpty();
  _impl_.slave_id_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceTableBySlaveIdRequest::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 72, 2> DeviceTableBySlaveIdRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceTableBySlaveIdRequest_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string device_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdRequest, _impl_.device_name_)}},
    // int32 slave_id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(DeviceTableBySlaveIdRequest, _impl_.slave_id_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdRequest, _impl_.slave_id_)}},
    // string point_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdRequest, _impl_.point_name_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string device_name = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdRequest, _impl_.device_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 slave_id = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdRequest, _impl_.slave_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string point_name = 3;
    {PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdRequest, _impl_.point_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\52\13\0\12\0\0\0\0"
    "device_service.DeviceTableBySlaveIdRequest"
    "device_name"
    "point_name"
  }},
};

::uint8_t* DeviceTableBySlaveIdRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceTableBySlaveIdRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    const std::string& _s = this->_internal_device_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceTableBySlaveIdRequest.device_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int32 slave_id = 2;
  if (this->_internal_slave_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt32ToArrayWithField<2>(
            stream, this->_internal_slave_id(), target);
  }

  // string point_name = 3;
  if (!this->_internal_point_name().empty()) {
    const std::string& _s = this->_internal_point_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceTableBySlaveIdRequest.point_name");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceTableBySlaveIdRequest)
  return target;
}

::size_t DeviceTableBySlaveIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceTableBySlaveIdRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string device_name = 1;
  if (!this->_internal_device_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_device_name());
  }

  // string point_name = 3;
  if (!this->_internal_point_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_point_name());
  }

  // int32 slave_id = 2;
  if (this->_internal_slave_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
        this->_internal_slave_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceTableBySlaveIdRequest::_class_data_ = {
    DeviceTableBySlaveIdRequest::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceTableBySlaveIdRequest::GetClassData() const {
  return &_class_data_;
}

void DeviceTableBySlaveIdRequest::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceTableBySlaveIdRequest*>(&to_msg);
  auto& from = static_cast<const DeviceTableBySlaveIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceTableBySlaveIdRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_device_name().empty()) {
    _this->_internal_set_device_name(from._internal_device_name());
  }
  if (!from._internal_point_name().empty()) {
    _this->_internal_set_point_name(from._internal_point_name());
  }
  if (from._internal_slave_id() != 0) {
    _this->_internal_set_slave_id(from._internal_slave_id());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceTableBySlaveIdRequest::CopyFrom(const DeviceTableBySlaveIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceTableBySlaveIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceTableBySlaveIdRequest::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceTableBySlaveIdRequest::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceTableBySlaveIdRequest::InternalSwap(DeviceTableBySlaveIdRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.device_name_, &other->_impl_.device_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.point_name_, &other->_impl_.point_name_, arena);
        swap(_impl_.slave_id_, other->_impl_.slave_id_);
}

::google::protobuf::Metadata DeviceTableBySlaveIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[7]);
}
// ===================================================================

class DeviceTableRow::_Internal {
 public:
};

DeviceTableRow::DeviceTableRow(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceTableRow)
}
inline PROTOBUF_NDEBUG_INLINE DeviceTableRow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : row_{visibility, arena, from.row_},
        _cached_size_{0} {}

DeviceTableRow::DeviceTableRow(
    ::google::protobuf::Arena* arena,
    const DeviceTableRow& from)
    : ::google::protobuf::Message(arena) {
  DeviceTableRow* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceTableRow)
}
inline PROTOBUF_NDEBUG_INLINE DeviceTableRow::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : row_{visibility, arena},
        _cached_size_{0} {}

inline void DeviceTableRow::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DeviceTableRow::~DeviceTableRow() {
  // @@protoc_insertion_point(destructor:device_service.DeviceTableRow)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceTableRow::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceTableRow::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceTableRow)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.row_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceTableRow::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 41, 2> DeviceTableRow::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DeviceTableRow_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated string row = 1;
    {::_pbi::TcParser::FastUR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DeviceTableRow, _impl_.row_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated string row = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceTableRow, _impl_.row_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\35\3\0\0\0\0\0\0"
    "device_service.DeviceTableRow"
    "row"
  }},
};

::uint8_t* DeviceTableRow::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceTableRow)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated string row = 1;
  for (int i = 0, n = this->_internal_row_size(); i < n; ++i) {
    const auto& s = this->_internal_row().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "device_service.DeviceTableRow.row");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceTableRow)
  return target;
}

::size_t DeviceTableRow::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceTableRow)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string row = 1;
  total_size += 1 * ::google::protobuf::internal::FromIntSize(_internal_row().size());
  for (int i = 0, n = _internal_row().size(); i < n; ++i) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
        _internal_row().Get(i));
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceTableRow::_class_data_ = {
    DeviceTableRow::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceTableRow::GetClassData() const {
  return &_class_data_;
}

void DeviceTableRow::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceTableRow*>(&to_msg);
  auto& from = static_cast<const DeviceTableRow&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceTableRow)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_row()->MergeFrom(from._internal_row());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceTableRow::CopyFrom(const DeviceTableRow& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceTableRow)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceTableRow::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceTableRow::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceTableRow::InternalSwap(DeviceTableRow* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.row_.InternalSwap(&other->_impl_.row_);
}

::google::protobuf::Metadata DeviceTableRow::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[8]);
}
// ===================================================================

class DeviceTableBySlaveIdResponse::_Internal {
 public:
  using HasBits = decltype(std::declval<DeviceTableBySlaveIdResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
    8 * PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdResponse, _impl_._has_bits_);
  static const ::device_service::DeviceTableRow& head_data(const DeviceTableBySlaveIdResponse* msg);
  static void set_has_head_data(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::device_service::DeviceTableRow& DeviceTableBySlaveIdResponse::_Internal::head_data(const DeviceTableBySlaveIdResponse* msg) {
  return *msg->_impl_.head_data_;
}
DeviceTableBySlaveIdResponse::DeviceTableBySlaveIdResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:device_service.DeviceTableBySlaveIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceTableBySlaveIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        table_data_{visibility, arena, from.table_data_} {}

DeviceTableBySlaveIdResponse::DeviceTableBySlaveIdResponse(
    ::google::protobuf::Arena* arena,
    const DeviceTableBySlaveIdResponse& from)
    : ::google::protobuf::Message(arena) {
  DeviceTableBySlaveIdResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.head_data_ = (cached_has_bits & 0x00000001u)
                ? CreateMaybeMessage<::device_service::DeviceTableRow>(arena, *from._impl_.head_data_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:device_service.DeviceTableBySlaveIdResponse)
}
inline PROTOBUF_NDEBUG_INLINE DeviceTableBySlaveIdResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        table_data_{visibility, arena} {}

inline void DeviceTableBySlaveIdResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.head_data_ = {};
}
DeviceTableBySlaveIdResponse::~DeviceTableBySlaveIdResponse() {
  // @@protoc_insertion_point(destructor:device_service.DeviceTableBySlaveIdResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DeviceTableBySlaveIdResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  delete _impl_.head_data_;
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DeviceTableBySlaveIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:device_service.DeviceTableBySlaveIdResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.table_data_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.head_data_ != nullptr);
    _impl_.head_data_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DeviceTableBySlaveIdResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 2, 0, 2> DeviceTableBySlaveIdResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DeviceTableBySlaveIdResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .device_service.DeviceTableRow table_data = 2;
    {::_pbi::TcParser::FastMtR1,
     {18, 63, 1, PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdResponse, _impl_.table_data_)}},
    // .device_service.DeviceTableRow head_data = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdResponse, _impl_.head_data_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .device_service.DeviceTableRow head_data = 1;
    {PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdResponse, _impl_.head_data_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .device_service.DeviceTableRow table_data = 2;
    {PROTOBUF_FIELD_OFFSET(DeviceTableBySlaveIdResponse, _impl_.table_data_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::device_service::DeviceTableRow>()},
    {::_pbi::TcParser::GetTable<::device_service::DeviceTableRow>()},
  }}, {{
  }},
};

::uint8_t* DeviceTableBySlaveIdResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:device_service.DeviceTableBySlaveIdResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  // .device_service.DeviceTableRow head_data = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, _Internal::head_data(this),
        _Internal::head_data(this).GetCachedSize(), target, stream);
  }

  // repeated .device_service.DeviceTableRow table_data = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_table_data_size()); i < n; i++) {
    const auto& repfield = this->_internal_table_data().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:device_service.DeviceTableBySlaveIdResponse)
  return target;
}

::size_t DeviceTableBySlaveIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:device_service.DeviceTableBySlaveIdResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .device_service.DeviceTableRow table_data = 2;
  total_size += 1UL * this->_internal_table_data_size();
  for (const auto& msg : this->_internal_table_data()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  // .device_service.DeviceTableRow head_data = 1;
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size +=
        1 + ::google::protobuf::internal::WireFormatLite::MessageSize(*_impl_.head_data_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DeviceTableBySlaveIdResponse::_class_data_ = {
    DeviceTableBySlaveIdResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DeviceTableBySlaveIdResponse::GetClassData() const {
  return &_class_data_;
}

void DeviceTableBySlaveIdResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DeviceTableBySlaveIdResponse*>(&to_msg);
  auto& from = static_cast<const DeviceTableBySlaveIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:device_service.DeviceTableBySlaveIdResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_table_data()->MergeFrom(
      from._internal_table_data());
  if ((from._impl_._has_bits_[0] & 0x00000001u) != 0) {
    _this->_internal_mutable_head_data()->::device_service::DeviceTableRow::MergeFrom(
        from._internal_head_data());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DeviceTableBySlaveIdResponse::CopyFrom(const DeviceTableBySlaveIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:device_service.DeviceTableBySlaveIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DeviceTableBySlaveIdResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DeviceTableBySlaveIdResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DeviceTableBySlaveIdResponse::InternalSwap(DeviceTableBySlaveIdResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.table_data_.InternalSwap(&other->_impl_.table_data_);
  swap(_impl_.head_data_, other->_impl_.head_data_);
}

::google::protobuf::Metadata DeviceTableBySlaveIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_device_2eproto_getter, &descriptor_table_device_2eproto_once,
      file_level_metadata_device_2eproto[9]);
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace device_service
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
