# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import proto.device_pb2 as device__pb2


class DeviceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetDeviceStringList = channel.unary_unary(
                '/device_service.DeviceService/GetDeviceStringList',
                request_serializer=device__pb2.DeviceNameListRequest.SerializeToString,
                response_deserializer=device__pb2.DeviceNameListResponse.FromString,
                )
        self.GetDeviceSlaveCnt = channel.unary_unary(
                '/device_service.DeviceService/GetDeviceSlaveCnt',
                request_serializer=device__pb2.DeviceSlaveCntRequest.SerializeToString,
                response_deserializer=device__pb2.DeviceSlaveCntResponse.FromString,
                )
        self.GetDeviceInfo = channel.unary_unary(
                '/device_service.DeviceService/GetDeviceInfo',
                request_serializer=device__pb2.DeviceInfoRequest.SerializeToString,
                response_deserializer=device__pb2.DeviceInfoResponse.FromString,
                )
        self.GetDeviceTableBySlaveId = channel.unary_unary(
                '/device_service.DeviceService/GetDeviceTableBySlaveId',
                request_serializer=device__pb2.DeviceTableBySlaveIdRequest.SerializeToString,
                response_deserializer=device__pb2.DeviceTableBySlaveIdResponse.FromString,
                )


class DeviceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetDeviceStringList(self, request, context):
        """返回一维字符串数组
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceSlaveCnt(self, request, context):
        """返回单个int值
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceInfo(self, request, context):
        """返回自定义结构体类型
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDeviceTableBySlaveId(self, request, context):
        """返回二维字符串数组
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DeviceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetDeviceStringList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceStringList,
                    request_deserializer=device__pb2.DeviceNameListRequest.FromString,
                    response_serializer=device__pb2.DeviceNameListResponse.SerializeToString,
            ),
            'GetDeviceSlaveCnt': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceSlaveCnt,
                    request_deserializer=device__pb2.DeviceSlaveCntRequest.FromString,
                    response_serializer=device__pb2.DeviceSlaveCntResponse.SerializeToString,
            ),
            'GetDeviceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceInfo,
                    request_deserializer=device__pb2.DeviceInfoRequest.FromString,
                    response_serializer=device__pb2.DeviceInfoResponse.SerializeToString,
            ),
            'GetDeviceTableBySlaveId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDeviceTableBySlaveId,
                    request_deserializer=device__pb2.DeviceTableBySlaveIdRequest.FromString,
                    response_serializer=device__pb2.DeviceTableBySlaveIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'device_service.DeviceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DeviceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetDeviceStringList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/device_service.DeviceService/GetDeviceStringList',
            device__pb2.DeviceNameListRequest.SerializeToString,
            device__pb2.DeviceNameListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceSlaveCnt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/device_service.DeviceService/GetDeviceSlaveCnt',
            device__pb2.DeviceSlaveCntRequest.SerializeToString,
            device__pb2.DeviceSlaveCntResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/device_service.DeviceService/GetDeviceInfo',
            device__pb2.DeviceInfoRequest.SerializeToString,
            device__pb2.DeviceInfoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDeviceTableBySlaveId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/device_service.DeviceService/GetDeviceTableBySlaveId',
            device__pb2.DeviceTableBySlaveIdRequest.SerializeToString,
            device__pb2.DeviceTableBySlaveIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
